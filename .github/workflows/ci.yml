name: CI/CD Pipeline

on:
  push:
    branches: 
      - develop
      - staging
      - main
  pull_request:
    branches: 
      - develop
      - staging
      - main

permissions:
  contents: read
  deployments: write
  pull-requests: write
  security-events: write

env:
  NODE_VERSION: '20'
  VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
  VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}

jobs:
  security:
    name: üõ°Ô∏è Security Checks
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: Run Dependency Review
        uses: actions/dependency-review-action@v3
        with:
          fail-on-severity: high
          
      - name: Cache node modules
        uses: actions/cache@v3
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-node-

  quality:
    name: üîç Code Quality
    needs: security
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'yarn'
      
      - name: Install dependencies
        run: |
          echo "Installing dependencies..."
          yarn install --frozen-lockfile
      
      - name: Run ESLint
        run: |
          echo "Running ESLint..."
          yarn lint
      
      - name: Run Type Check
        run: |
          echo "Running TypeScript checks..."
          yarn type-check
      
      - name: Run Tests
        run: |
          echo "Running tests..."
          yarn test
        
      - name: Build Application
        run: |
          echo "Building application..."
          yarn build

  preview:
    name: üîé Preview
    needs: quality
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request'
    environment:
      name: preview
      url: ${{ steps.deploy-preview.outputs.url }}
    
    steps:
      - uses: actions/checkout@v4
      
      - name: Deploy Preview
        id: deploy-preview
        uses: amondnet/vercel-action@v25
        with:
          vercel-token: ${{ secrets.VERCEL_TOKEN }}
          vercel-org-id: ${{ secrets.VERCEL_ORG_ID }}
          vercel-project-id: ${{ secrets.VERCEL_PROJECT_ID }}
          github-token: ${{ secrets.GITHUB_TOKEN }}
          github-comment: true

  deploy:
    name: üöÄ Deploy
    needs: quality
    runs-on: ubuntu-latest
    if: github.event_name == 'push'
    
    steps:
      - uses: actions/checkout@v4
      
      - name: Deploy to Development
        if: github.ref == 'refs/heads/develop'
        uses: amondnet/vercel-action@v25
        with:
          vercel-token: ${{ secrets.VERCEL_TOKEN }}
          vercel-org-id: ${{ secrets.VERCEL_ORG_ID }}
          vercel-project-id: ${{ secrets.VERCEL_PROJECT_ID }}
          vercel-args: '--prod --env NEXT_PUBLIC_ENV=development'
          alias-domains: |
            dev-{VERCEL_PROJECT_NAME}.vercel.app
      
      - name: Deploy to Staging
        if: github.ref == 'refs/heads/staging'
        uses: amondnet/vercel-action@v25
        with:
          vercel-token: ${{ secrets.VERCEL_TOKEN }}
          vercel-org-id: ${{ secrets.VERCEL_ORG_ID }}
          vercel-project-id: ${{ secrets.VERCEL_PROJECT_ID }}
          vercel-args: '--prod --env NEXT_PUBLIC_ENV=staging'
          alias-domains: |
            staging-{VERCEL_PROJECT_NAME}.vercel.app
      
      - name: Deploy to Production
        if: github.ref == 'refs/heads/main'
        uses: amondnet/vercel-action@v25
        with:
          vercel-token: ${{ secrets.VERCEL_TOKEN }}
          vercel-org-id: ${{ secrets.VERCEL_ORG_ID }}
          vercel-project-id: ${{ secrets.VERCEL_PROJECT_ID }}
          vercel-args: '--prod'