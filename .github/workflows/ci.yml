name: CI/CD Pipeline

on:
  push:
    branches: 
      - develop
      - staging
      - main
  pull_request:
    branches: 
      - develop
      - staging
      - main

jobs:
  validate:
    name: üîç Validate
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'yarn'
      
      - name: Install dependencies
        run: yarn install --frozen-lockfile
      
      - name: Run linting
        run: yarn lint
      
      - name: Run type checking
        run: yarn type-check
      
      - name: Run tests
        run: yarn test
      
      - name: Build application
        run: yarn build

  deploy:
    name: üöÄ Deploy
    needs: validate
    runs-on: ubuntu-latest
    env:
      VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
      VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}
    
    steps:
      - uses: actions/checkout@v4
      
      - name: Install Vercel CLI
        run: yarn global add vercel@latest
      
      - name: Deploy to Development
        if: github.ref == 'refs/heads/develop'
        run: |
          vercel deploy --token=${{ secrets.VERCEL_TOKEN }} \
            --env NEXT_PUBLIC_ENV=development \
            --yes \
            --prod
      
      - name: Deploy to Staging
        if: github.ref == 'refs/heads/staging'
        run: |
          vercel deploy --token=${{ secrets.VERCEL_TOKEN }} \
            --env NEXT_PUBLIC_ENV=staging \
            --yes \
            --prod
      
      - name: Deploy to Production
        if: github.ref == 'refs/heads/main'
        run: |
          vercel deploy --token=${{ secrets.VERCEL_TOKEN }} \
            --yes \
            --prod